<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.sinho.hycu.boardNotice.repository.mapper.MemberMapper">
	<insert id="memberJoin" useGeneratedKeys="true" keyProperty="seq" >
		insert into MEMBER(
			userid,
		    password,
		    email,
		    full_name,
		    registration_date,
		    update_date
		) values (
			#{userid},
			#{password},
			#{email},
			#{fullName},
			now(),
			now()
		)
	</insert>
	
	<!-- 아이디중복검사 -->
	<select id="findByUserID" parameterType="Member" resultType="Member">
		select 
			userid
		FROM MEMBER
		WHERE userid = #{userid}
	</select>
	
	<!-- 이메일중복검사 -->
	<select id="findByEmail" parameterType="Member" resultType="Member">
		select 
			email
		FROM MEMBER
		WHERE email = #{email}
	</select>
	
	<!-- 비밀번호재설정을 위한 정보 조회 -->
	<select id="findByUserVerifyInfo" parameterType="Member" resultType="Member">
		select 
			userid,
			email
		FROM MEMBER
		WHERE userid = #{userid}
		AND email = #{email}
	</select>
	
	<!-- 사용자정보가져오기 -->
	<select id="findByUserInfo" parameterType="Member" resultType="Member">
		select 
			userid,
			email,
			full_name,
			update_date
		FROM MEMBER
		WHERE userid = #{userid}
		AND password = #{password}
	</select>
	
	<insert id="insertMemberVerifyMgt" useGeneratedKeys="true" keyProperty="seq" >
		insert into memberverifymgt(
			userid,
		    verify_code,
		    regist_dt,
		    send_email
		) values (
			#{userid},
			#{verifyCode},
			now(),
			#{sendEmail}
		)
	</insert>
	
	<!-- 인증코드검증 -->
	<select id="selectMemberVerifyMgt" parameterType="MemberVerifyMgt" resultType="MemberVerifyMgt">
		select 
			userid,
			send_email
		FROM MemberVerifyMgt
		WHERE userid = #{userid}
		AND verify_code = #{verifyCode}
		AND send_email = #{sendEmail}
	</select>
	
	<!-- 사용자 비밀번호 재설정 -->
	<update id="updateMemberPasswordReset" parameterType="Member" >
		UPDATE 
			MEMBER
		SET
			password = #{password},
			update_date = now(),
			pass_error_cnt = 0
		WHERE userid = #{userid}
		AND   email = #{email}
	</update>
</mapper>